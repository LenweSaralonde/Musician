<Ui xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.blizzard.com/wow/ui/">

	<!-- Edit box with timecode template -->

	<EditBox name="MusicianTimeEditBoxTemplate" inherits="InputBoxTemplate" letters="8" historyLines="0" autofocus="false" virtual="true">
		<Size x="55" y="20"/>
		<FontString inherits="GameFontHighlightSmall" justifyH="LEFT" justifyV="MIDDLE" />
		<Layers>
			<Layer level="BACKGROUND">
				<FontString name="$parentTitle" inherits="GameFontNormal" justifyH="CENTER" justifyV="MIDDLE">
					<Size x="60" y="0"/>
					<Anchors>
						<Anchor point="TOPRIGHT" x="0" y="35" relativePoint="TOPRIGHT" relativeTo="$parent" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnEscapePressed>self:ClearFocus()</OnEscapePressed>
			<OnKeyUp>
				if key == "ENTER" then
					self:ClearFocus()
				end
			</OnKeyUp>
		</Scripts>
	</EditBox>

	<!-- Fieldset template -->

	<Frame name="MusicianFieldset" virtual="true">
		<Layers>
			<Layer level="BACKGROUND">
				<Texture file="Interface\DialogFrame\UI-DialogBox-Background" horizTile="true" vertTile="true">
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="TOPLEFT" x="3" y="-4"/>
						<Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT" x="-5" y="2"/>
					</Anchors>
				</Texture>
			</Layer>
			<Layer level="BORDER" textureSubLevel="1">
				<Texture name="$parentInsetBotLeftCorner" inherits="UI-Frame-InnerBotLeftCorner" parentKey="InsetBorderBottomLeft">
					<Anchors>
						<Anchor point="BOTTOMLEFT" x="2" y="0"/>
					</Anchors>
				</Texture>
				<Texture name="$parentInsetBotRightCorner" inherits="UI-Frame-InnerBotRight" parentKey="InsetBorderBottomRight">
					<Anchors>
						<Anchor point="BOTTOMRIGHT" x="-3" y="0"/>
					</Anchors>
				</Texture>
				<Texture name="$parentInsetTopLeftCorner" inherits="UI-Frame-InnerTopLeft" parentKey="InsetBorderTopLeft">
					<Anchors>
						<Anchor point="TOPLEFT" x="2" y="-3"/>
					</Anchors>
				</Texture>
				<Texture name="$parentInsetTopRightCorner" inherits="UI-Frame-InnerTopRight" parentKey="InsetBorderTopmRight">
					<Anchors>
						<Anchor point="TOPRIGHT" x="-3" y="-3"/>
					</Anchors>
				</Texture>
			</Layer>
			<Layer level="BORDER">
				<Texture name="$parentInsetBottomBorder" inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderBottom">
					<Anchors>
						<Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="BOTTOMRIGHT"/>
						<Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="BOTTOMLEFT"/>
					</Anchors>
				</Texture>

				<Texture name="$parentInsetLeftBorder" inherits="!UI-Frame-InnerLeftTile" parentKey="InsetBorderLeft">
					<Anchors>
						<Anchor point="TOPLEFT" x="2" y="-3"/>
						<Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="TOPLEFT"/>
					</Anchors>
				</Texture>
				<Texture name="$parentInsetRightBorder" inherits="!UI-Frame-InnerRightTile" parentKey="InsetBorderRight">
					<Anchors>
						<Anchor point="TOPRIGHT" x="-3" y="-3"/>
						<Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPRIGHT"/>
					</Anchors>
				</Texture>
				<Texture name="$parentInsetTopBorder" inherits="_UI-Frame-InnerTopTile" parentKey="InsetBorderBottom">
					<Anchors>
						<Anchor point="TOPLEFT" relativeKey="$parent.InsetBorderLeft" relativePoint="TOPLEFT"/>
						<Anchor point="TOPRIGHT" relativeKey="$parent.InsetBorderRight" relativePoint="TOPRIGHT"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
	</Frame>

	<!-- Track row template -->

	<Frame name="MusicianTrackTemplate" virtual="true">
		<Size y="32" />
		<Anchors>
			<Anchor point="LEFT" x="0" />
			<Anchor point="RIGHT" x="0" />
		</Anchors>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentTrackId" parentKey="idText" inherits="GameFontHighlightLarge" justifyh="" justifyv="" text="00">
					<Size x="32" y="32" />
					<Anchors>
						<Anchor point="LEFT" y="2" relativePoint="LEFT" relativeTo="$parent" />
					</Anchors>
				</FontString>
				<FontString name="$parentTrackName" parentKey="nameText" inherits="GameFontNormalSmall" text="[TrackName]">
					<Anchors>
						<Anchor point="LEFT" x="68" y="9" />
					</Anchors>
				</FontString>
				<FontString name="$parentTrackInfo" parentKey="infoText" inherits="GameFontNormalSmall" text="[TrackInfo]">
					<Anchors>
						<Anchor point="LEFT" x="68" y="-4" />
					</Anchors>
					<OnHyperlinkClick>
						ChatFrame_OnHyperlinkShow(DEFAULT_CHAT_FRAME, link, text, button)
					</OnHyperlinkClick>
				</FontString>
				<Texture name="$parentMeter" parentKey="meterTexture" alphaMode="ADD">
					<Size x="32" y="5"/>
					<Anchors>
						<Anchor point="CENTER" x="48" y="-4" relativePoint="LEFT" relativeTo="$parent" />
					</Anchors>
					<Color a="1" r="0" g="1" b="0" />
				</Texture>
			</Layer>

			<Layer level="BACKGROUND">
				<Texture name="$parentLeft" file="Interface\AuctionFrame\UI-AuctionItemNameFrame">
					<Size>
						<AbsDimension x="10" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="0" y="2"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.078125" top="0" bottom="1.0"/>
				</Texture>
				<Texture name="$parentRight" file="Interface\AuctionFrame\UI-AuctionItemNameFrame">
					<Size>
						<AbsDimension x="10" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT">
							<Offset>
								<AbsDimension x="0" y="2"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.75" right="0.828125" top="0" bottom="1.0"/>
				</Texture>
				<Texture file="Interface\AuctionFrame\UI-AuctionItemNameFrame">
					<Size>
						<AbsDimension x="10" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
						<Anchor point="RIGHT" relativeTo="$parentRight" relativePoint="LEFT">
							<Offset>
								<AbsDimension x="0" y="0"/>
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.078125" right="0.75" top="0" bottom="1.0"/>
				</Texture>
			</Layer>
		</Layers>

		<Frames>
			<CheckButton name="$parentMute" parentKey="muteCheckbox" inherits="MusicianOptionsSmallCheckButtonTemplate" >
				<Anchors>
					<Anchor point="LEFT" x="32" y="9" />
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentSolo" parentKey="soloCheckbox" inherits="MusicianOptionsSmallCheckButtonTemplate" >
				<Anchors>
					<Anchor point="LEFT" x="48" y="9" />
				</Anchors>
			</CheckButton>

			<Frame name="$parentInstrumentDropdown" parentKey="instrumentDropdown" inherits="MusicianInstrumentDropdownTemplate">
				<Anchors>
					<Anchor point="RIGHT" relativePoint="RIGHT" relativeTo="$parent" x="14" />
				</Anchors>
			</Frame>

			<Frame name="$parentTransposeDropdown" parentKey="transposeDropdown" inherits="MusicianDropDownMenuTooltipTemplate">
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentInstrumentDropdown" x="32" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="prepend">
						MSA_DropDownMenu_SetWidth(self, 40)
					</OnLoad>
				</Scripts>
			</Frame>

		</Frames>

		<Scripts>
			<OnLoad>
				self:SetHyperlinksEnabled(true)
				self:SetScript("OnHyperlinkClick", InlineHyperlinkFrame_OnClick)
			</OnLoad>
		</Scripts>
	</Frame>


	<!-- Main frame -->

	<Frame name="MusicianTrackEditor" inherits="MusicianDialogTemplate" resizable="true">

		<Size x="620" y="500" />

		<Frames>

			<!-- Player slider -->

			<Slider name="$parentSourceSongSlider" inherits="OptionsSliderTemplate" defaultValue="1" minValue="1" maxValue="1" valueStep=".01" stepsPerPage="1000">
				<Size y="22"/>
				<Anchors>
					<Anchor point="TOP" x="0" y="-60"/>
					<Anchor point="LEFT" x="20" />
					<Anchor point="RIGHT" x="-20" />
				</Anchors>
				<HitRectInsets>
					<AbsInset left="0" right="0" top="0" bottom="0"/>
				</HitRectInsets>
				<Scripts>
					<OnMouseDown>
						self.dragging = true
					</OnMouseDown>
					<OnMouseUp>
						self.dragging = false
						if Musician.sourceSong then
							Musician.sourceSong:Seek(self:GetValue() - .001)
						end
					</OnMouseUp>
					<OnUpdate>
						if self.dragging then
							Musician.TrackEditor.UpdateCursor(nil, Musician.sourceSong)
						end
					</OnUpdate>
				</Scripts>
			</Slider>

			<!-- Timecode inputs -->

			<EditBox name="$parentCropFrom" inherits="MusicianTimeEditBoxTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" x="5" y="0" relativeTo="$parentSourceSongSlider" relativePoint="BOTTOMLEFT" />
				</Anchors>
				<Scripts>
					<OnLoad>MusicianTrackEditorCropFromTitle:SetJustifyH('LEFT')</OnLoad>
				</Scripts>
			</EditBox>

			<EditBox name="$parentCursorAt" inherits="MusicianTimeEditBoxTemplate">
				<Anchors>
					<Anchor point="TOP" y="0" relativeTo="$parentSourceSongSlider" relativePoint="BOTTOM" />
				</Anchors>
			</EditBox>

			<EditBox name="$parentCropTo" inherits="MusicianTimeEditBoxTemplate">
				<Anchors>
					<Anchor point="TOPRIGHT" x="0" y="0" relativeTo="$parentSourceSongSlider" relativePoint="BOTTOMRIGHT" />
				</Anchors>
				<Scripts>
					<OnLoad>
						MusicianTrackEditorCropToTitle:SetJustifyH('RIGHT')
					</OnLoad>
				</Scripts>
			</EditBox>

			<!-- Player buttons -->

			<Button name="$parentPlayButton" inherits="MusicianIconButtonTemplate">
				<Size x="60" y="20" />
				<Anchors>
					<Anchor point="BOTTOM" x="0" y="0" relativePoint="TOP" relativeTo="$parentSourceSongSlider" />
				</Anchors>
				<Scripts>
					<OnClick>
						if Musician.sourceSong:IsPlaying() then
							Musician.sourceSong:Stop()
						else
							if Musician.sourceSong.cursor >= Musician.sourceSong.cropTo then
								Musician.sourceSong:Seek(Musician.sourceSong.cropFrom)
							end
							Musician.sourceSong:Resume()
						end
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentPrevButton" inherits="MusicianIconButtonTemplate">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentPlayButton" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.sourceSong:Seek(max(Musician.sourceSong.cropFrom, Musician.sourceSong.cursor - 10))
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentNextButton" inherits="MusicianIconButtonTemplate">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentPlayButton" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.sourceSong:Seek(min(Musician.sourceSong.cropTo, Musician.sourceSong.cursor + 10))
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentGoToStartButton" inherits="MusicianIconButtonTemplate">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentPrevButton" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.sourceSong:Seek(Musician.sourceSong.cropFrom)
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentGoToEndButton" inherits="MusicianIconButtonTemplate" hidden="true">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentNextButton" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.sourceSong:Seek(Musician.sourceSong.cropTo)
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentSetCropFromButton" inherits="MusicianIconButtonTemplate">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentGoToEndButton" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.TrackEditor.SetCropFrom(Musician.sourceSong.cursor)
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentSetCropToButton" inherits="MusicianIconButtonTemplate">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentSetCropFromButton" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.TrackEditor.SetCropTo(Musician.sourceSong.cursor)
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentSynchronizeButton" inherits="MusicianIconButtonTemplate">
				<Size x="40" y="20" />
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentSetCropToButton" x="20" />
				</Anchors>
				<Scripts>
					<OnClick>
						Musician.TrackEditor.Synchronize()
					</OnClick>
				</Scripts>
			</Button>

			<!-- Track list -->

			<ScrollFrame name="$parentScrollFrame" inherits="UIPanelScrollFrameTemplate">
				<Anchors>
					<Anchor point="TOP" y="-132" />
					<Anchor point="LEFT" x="13" />
					<Anchor point="RIGHT" x="-39" />
					<Anchor point="BOTTOM" y="12" />
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<Texture name="$parentTop" file="Interface\PaperDollInfoFrame\UI-Character-ScrollBar">
							<Size x="31" y="102"/>
							<Anchors>
								<Anchor point="TOPLEFT" relativePoint="TOPRIGHT" x="-2" y="5"/>
							</Anchors>
							<TexCoords left="0" right="0.484375" top="0" bottom="0.4"/>
						</Texture>
						<Texture name="$parentBottom" file="Interface\PaperDollInfoFrame\UI-Character-ScrollBar">
							<Size x="31" y="106"/>
							<Anchors>
								<Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT" x="-2" y="-2"/>
							</Anchors>
							<TexCoords left="0.515625" right="1.0" top="0" bottom="0.4140625"/>
						</Texture>
						<Texture name="$parentMiddle" file="Interface\PaperDollInfoFrame\UI-Character-ScrollBar">
							<Size x="31" y="1"/>
							<Anchors>
								<Anchor point="TOP" relativeTo="$parentTop" relativePoint="BOTTOM"/>
								<Anchor point="BOTTOM" relativeTo="$parentBottom" relativePoint="TOP"/>
							</Anchors>
							<TexCoords left="0" right="0.484375" top=".75" bottom="1.0"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnScrollRangeChanged inherit="append">
						-- Workaround to fix the gap in the scroll height
						C_Timer.After(.0001, function()
							local range = max(0, MusicianTrackEditorTrackContainer:GetHeight() - self:GetHeight() - 2)
							self.ScrollBar:SetMinMaxValues(0, range)
							ScrollFrame_OnScrollRangeChanged(self, 0, range)
						end)
					</OnScrollRangeChanged>
					<OnSizeChanged inherit="append">
						MusicianTrackEditorTrackContainer:SetWidth(self:GetWidth())
					</OnSizeChanged>
				</Scripts>
				<ScrollChild>
					<Frame name="MusicianTrackEditorTrackContainer">
						<Size x="585" y="0"/>
						<Anchors>
							<Anchor point="TOPLEFT"/>
						</Anchors>
					</Frame>
				</ScrollChild>
			</ScrollFrame>

			<Frame name="$parentBackground" inherits="MusicianFieldset">
				<Anchors>
					<Anchor point="TOPLEFT" x="-5" y="7" relativeTo="$parentScrollFrame" />
					<Anchor point="BOTTOMRIGHT" x="6" y="-3" relativeTo="$parentScrollFrame"/>
				</Anchors>
			</Frame>

			<!-- Resize button -->

			<Button name="$parentResizeButton" parentKey="resizeButton">
				<Size x="20" y="20"/>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" x="3" y="-3"/>
				</Anchors>
				<Scripts>
					<OnMouseDown>
						self:SetButtonState("PUSHED", true)
						self:GetHighlightTexture():Hide()
						local window = self:GetParent()
						window:StartSizing("BOTTOMRIGHT")
					</OnMouseDown>
					<OnMouseUp>
						self:SetButtonState("NORMAL", false)
						self:GetHighlightTexture():Show()
						local window = self:GetParent()
						window:StopMovingOrSizing()
						FCF_SavePositionAndDimensions(window)
					</OnMouseUp>
					<OnLoad>
						local texture
						for _, texture in ipairs({ self:GetNormalTexture(), self:GetHighlightTexture(), self:GetPushedTexture() }) do
							texture:ClearAllPoints()
							texture:SetPoint("TOPLEFT", -10, 10)
							texture:SetSize(20, 20)
						end
						self.frameLevel = MusicianTrackEditorScrollFrame:GetFrameLevel() + 100
						self:SetFrameLevel(self.frameLevel)
					</OnLoad>
				</Scripts>
				<NormalTexture file="Interface\ChatFrame\UI-ChatIM-SizeGrabber-Up"/>
				<HighlightTexture file="Interface\ChatFrame\UI-ChatIM-SizeGrabber-Highlight"/>
				<PushedTexture file="Interface\ChatFrame\UI-ChatIM-SizeGrabber-Down"/>
			</Button>

		</Frames>

		<Layers>
			<Layer level="BACKGROUND">

				<!-- Main title -->

				<FontString name="$parentTitle" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="-15"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>

				<!-- Track list headers -->

				<FontString name="$parentHeaderTrackId" inherits="GameFontNormal" text="#">
					<Size x="32" />
					<Anchors>
						<Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT" x="0" y="8" relativeTo="$parentScrollFrame" />
					</Anchors>
				</FontString>

				<FontString name="$parentHeaderMute" inherits="MusicianFontIconsNormal">
					<Size x="16" />
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentHeaderTrackId" />
					</Anchors>
				</FontString>

				<FontString name="$parentHeaderSolo" inherits="MusicianFontIconsNormal">
					<Size x="16" />
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentHeaderMute" />
					</Anchors>
				</FontString>

				<FontString name="$parentHeaderInstrument" inherits="GameFontNormal" text="Instrument">
					<Size x="135" />
					<Anchors>
						<Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" x="0" y="8" relativeTo="$parentScrollFrame" />
					</Anchors>
				</FontString>

				<FontString name="$parentHeaderTranspose" inherits="GameFontNormal" text="Octave">
					<Size x="74" />
					<Anchors>
						<Anchor point="RIGHT" relativePoint="LEFT" x="10" relativeTo="$parentHeaderInstrument" />
					</Anchors>
				</FontString>

			</Layer>
		</Layers>

		<Scripts>
			<OnLoad inherit="prepend">
				MusicianTrackEditorPrevButton:SetText(Musician.Icons.FastBw)
				MusicianTrackEditorNextButton:SetText(Musician.Icons.FastFw)
				MusicianTrackEditorGoToStartButton:SetText(Musician.Icons.ToStart)
				MusicianTrackEditorGoToEndButton:SetText(Musician.Icons.ToEnd)
				MusicianTrackEditorSetCropFromButton:SetText(Musician.Icons.InPoint)
				MusicianTrackEditorSetCropToButton:SetText(Musician.Icons.OutPoint)
				MusicianTrackEditorSynchronizeButton:SetText(Musician.Icons.Reset)
				MusicianTrackEditorSynchronizeButton.tooltipText = Musician.Msg.SYNCHRONIZE_TRACKS
				MusicianTrackEditorHeaderMute:SetText(Musician.Icons.Mute)
				MusicianTrackEditorHeaderSolo:SetText(Musician.Icons.Solo)
			</OnLoad>
			<OnSizeChanged inherit="append">
				self:SetMinResize(600, 270)
				self:SetMaxResize(UIParent:GetWidth() / self:GetScale(), UIParent:GetHeight() / self:GetScale())
			</OnSizeChanged>
		</Scripts>

	</Frame>
</Ui>