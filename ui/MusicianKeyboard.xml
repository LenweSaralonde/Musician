<Ui xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.blizzard.com/wow/ui/">

	<!-- Keyboard key template -->

	<Button name="MusicianKeyboardKeyTemplate" inherits="UIMenuButtonStretchTemplate" virtual="true">
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="background" name="$parentBackground">
					<Size x="34" y="20"/>
					<Anchors>
						<Anchor point="CENTER"/>
					</Anchors>
					<Color a="1" r="1" g="1" b="1" />
				</Texture>

				<Texture parentKey="glowColor">
					<Anchors>
						<Anchor point="CENTER" relativePoint="CENTER"/>
					</Anchors>
					<Color a="1" r="1" g="1" b="1" />
				</Texture>

				<MaskTexture parentKey="glowMask" file="Interface\AddOns\Musician\ui\textures\button-glow" hWrapMode="CLAMPTOBLACKADDITIVE" vWrapMode="CLAMPTOBLACKADDITIVE">
					<Anchors>
						<Anchor point="TOPLEFT" relativeKey="$parent.glowColor" />
						<Anchor point="BOTTOMRIGHT" relativeKey="$parent.glowColor" />
					</Anchors>
					<MaskedTextures>
						<MaskedTexture childKey="glowColor"/>
					</MaskedTextures>
				</MaskTexture>

			</Layer>
			<Layer level="OVERLAY">
				<FontString parentKey="subText" name="$parentSubText" inherits="GameFontHighlightSmall">
					<Size x="32" y="32" />
					<Anchors>
						<Anchor point="CENTER" x="0" y="-10" relativePoint="CENTER" relativeTo="$parent" />
					</Anchors>
				</FontString>
				<FontString parentKey="percussionIcon" name="$parentPercussionIcon" inherits="MusicianFontPercussionIconsHighlightLarge">
					<Size x="32" y="32" />
					<Anchors>
						<Anchor point="CENTER" x="0" y="18" relativePoint="CENTER" relativeTo="$parentSubText" />
					</Anchors>
				</FontString>
				<FontString parentKey="percussionIconNumber" name="$parentPercussionIconNumber" inherits="GameFontHighlightSmall">
					<Size x="8" y="8" />
					<Anchors>
						<Anchor point="TOPRIGHT" x="2" y="-8" relativePoint="TOPRIGHT" relativeTo="$parentPercussionIcon" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<ButtonText parentKey="Text" name="$parentText">
			<Anchors>
				<Anchor point="CENTER" x="0" y="9"/>
			</Anchors>
		</ButtonText>
		<Scripts>
			<OnLoad>
				self.background:SetDrawLayer("BACKGROUND", -8)
				self.subTextPoint = { self.subText:GetPoint() }
			</OnLoad>
			<OnMouseDown inherit="append">
				local point, relativeTo, relativePoint, xOfs, yOfs = unpack(self.subTextPoint)
				local x, y = self:GetPushedTextOffset()
				self.subText:SetPoint(point, relativeTo, relativePoint, xOfs + x, yOfs + y)
				if not(self.keyPressed) and not(self.down) then
					Musician.Keyboard.OnKey(self.keyValue, true)
				end
				self.down = true
			</OnMouseDown>
			<OnMouseUp inherit="append">
				self.subText:SetPoint(unpack(self.subTextPoint))
				if not(self.keyPressed) and self.down then
					Musician.Keyboard.OnKey(self.keyValue, false)
				end
				self.down = false
			</OnMouseUp>
			<OnSizeChanged>
				self.glowColor:SetAlpha(0)
				self.background:SetWidth(w - 7)
				self.background:SetHeight(h - 7)
				self.glowColor:SetWidth(w * 1.75)
				self.glowColor:SetHeight(h * 1.75)
				self:SetHighlightTexture(nil)
				self.subText:SetWidth(self:GetWidth())
			</OnSizeChanged>
		</Scripts>
		<NormalFont style="GameFontHighlightLarge"/>
		<DisabledFont style="GameFontDisableLarge"/>
		<HighlightFont style="GameFontHighlightLarge"/>
	</Button>

	<!-- Program key template -->

	<Button name="MusicianProgramKeyTemplate" inherits="MusicianLEDTextButtonTemplate" virtual="true">
		<Size x="48" y="24" />
		<Scripts>
			<OnMouseDown inherit="append">
				if not(self.keyPressed) and not(self.down) then
					Musician.Keyboard.OnKey(self.keyValue, true)
				end
				self.down = true
			</OnMouseDown>
			<OnMouseUp inherit="append">
				if not(self.keyPressed) and self.down then
					Musician.Keyboard.OnKey(self.keyValue, false)
				end
				self.down = false
			</OnMouseUp>
		</Scripts>
	</Button>

	<Button name="MusicianProgramKeyNoLEDTemplate" inherits="MusicianProgramKeyTemplate" virtual="true">
		<ButtonText name="$parentText" parentKey="Text">
			<Anchors>
				<Anchor point="CENTER" x="0" />
			</Anchors>
		</ButtonText>
		<Scripts>
			<OnLoad inherit="append">
				self.led:Hide()
				self.ledOff:Hide()
			</OnLoad>
		</Scripts>
	</Button>

	<!-- Square button template -->

	<Button name="MusicianKeyboardSquareButtonTemplate" inherits="MusicianIconButtonTemplate" virtual="true">
		<Size x="24" y="24" />
	</Button>

	<!-- Layer settings template -->

	<Frame name="MusicianLayerTemplate" virtual="true">
		<Size x="250" y="92" />
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentLayerName" parentKey="layerName" inherits="GameFontHighlight" justifyh="LEFT">
					<Size x="250" y="32" />
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>

		<Frames>
			<Frame name="$parentInstrument" inherits="MusicianInstrumentDropdownTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" x="-18" relativePoint="BOTTOMLEFT" relativeTo="$parentLayerName" />
				</Anchors>
				<Scripts>
					<OnLoad inherit="prepend">
						MSA_DropDownMenu_SetWidth(self, 150)
					</OnLoad>
				</Scripts>
			</Frame>

			<Button name="$parentShiftRight" parentKey="shiftRight" inherits="MusicianKeyboardSquareButtonTemplate">
				<Anchors>
					<Anchor point="RIGHT" relativePoint="RIGHT" relativeTo="$parent" />
				</Anchors>
			</Button>

			<Button name="$parentShiftReset" parentKey="shiftReset" inherits="MusicianKeyboardSquareButtonTemplate">
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentShiftRight" />
				</Anchors>
			</Button>

			<Button name="$parentShiftLeft" parentKey="shiftLeft" inherits="MusicianKeyboardSquareButtonTemplate">
				<Anchors>
					<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentShiftReset" />
				</Anchors>
			</Button>

			<Button name="$parentShiftUp" parentKey="shiftUp" inherits="MusicianKeyboardSquareButtonTemplate">
				<Anchors>
					<Anchor point="BOTTOM" relativePoint="TOP" relativeTo="$parentShiftReset" />
				</Anchors>
			</Button>

			<Button name="$parentShiftDown" parentKey="shiftDown" inherits="MusicianKeyboardSquareButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativePoint="BOTTOM" relativeTo="$parentShiftReset" />
				</Anchors>
			</Button>

			<CheckButton name="$parentPowerChords" parentKey="powerChordsCheckbox" inherits="MusicianOptionsSmallCheckButtonTemplate" >
				<Anchors>
					<Anchor point="TOPLEFT" x="16" y="0" relativeTo="$parentInstrument" relativePoint="BOTTOMLEFT" />
				</Anchors>
				<Scripts>
					<OnLoad>
						self.tooltipText = Musician.Msg.POWER_CHORDS
					</OnLoad>
				</Scripts>
			</CheckButton>
		</Frames>

		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentPowerChordsBolt" parentKey="powerChordsBolt" inherits="MusicianFontIconsNormal" justifyh="LEFT">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentPowerChords" x="4" />
					</Anchors>
				</FontString>
				<FontString name="$parentPowerChordsLabel" parentKey="powerChordsLabel" inherits="GameFontNormal" justifyh="LEFT">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentPowerChordsBolt" x="4" />
					</Anchors>
				</FontString>
				<FontString name="$parentPowerChordsHorns" parentKey="powerChordsHorns" inherits="MusicianFontIconsNormal" justifyh="LEFT">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentPowerChordsLabel" x="4" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>

		<Scripts>
			<OnLoad>
				self.shiftUp:SetText(Musician.Icons.UpBig)
				self.shiftDown:SetText(Musician.Icons.DownBig)
				self.shiftLeft:SetText(Musician.Icons.LeftBig)
				self.shiftRight:SetText(Musician.Icons.RightBig)
				self.shiftReset:SetText(Musician.Icons.Reset)
				self.powerChordsBolt:SetText(Musician.Icons.Bolt)
				self.powerChordsLabel:SetText(Musician.Msg.POWER_CHORDS)
				self.powerChordsHorns:SetText(Musician.Icons.SignOfHorns)
				local powerChordsLabelWidth = 12 + self.powerChordsBolt:GetWidth() + self.powerChordsLabel:GetWidth() + self.powerChordsHorns:GetWidth()
				self.powerChordsCheckbox:SetHitRectInsets(0, -powerChordsLabelWidth, 0, 0)
			</OnLoad>
		</Scripts>

	</Frame>

	<!-- Main frame -->

	<Frame name="MusicianKeyboard" inherits="MusicianDialogTemplate" enableKeyboard="true">
		<Scripts>
			<OnHide inherit="append">
				Musician.Keyboard.SetButtonState(MusicianKeyboardProgramKeysWriteProgramToggle, true)
				MusicianKeyboard.SetSavingProgram(false)
				Musician.Keyboard.SetButtonState(MusicianKeyboardProgramKeysWriteProgramToggle, false)
			</OnHide>
			<OnLoad inherit="prepend">
				MusicianKeyboard.showKeyboard = function(visible)
					if visible == nil then
						visible = not(MusicianKeyboardKeys:IsVisible())
					end

					if visible then
						MusicianKeyboard:SetHeight(385)
						MusicianKeyboardKeys:Show()
						MusicianKeyboardToggleKeyboardButton:SetText(Musician.Icons.Up ..  Musician.Icons.Blank .. Musician.Icons.PianoKeys)
						MusicianKeyboardToggleKeyboardButton.tooltipText = Musician.Msg.HIDE_KEYBOARD
					else
						MusicianKeyboardKeys:Hide()
						MusicianKeyboard:SetHeight(385 - MusicianKeyboardKeys:GetHeight() - 10)
						MusicianKeyboardToggleKeyboardButton:SetText(Musician.Icons.Down ..  Musician.Icons.Blank .. Musician.Icons.PianoKeys)
						MusicianKeyboardToggleKeyboardButton.tooltipText = Musician.Msg.SHOW_KEYBOARD
					end

					Musician_Settings.keyboardVisible = visible
				end
			</OnLoad>
			<OnShow inherit="append">
				self:SetScale(1)
			</OnShow>
		</Scripts>

		<Size x="790" y="385" />

		<Layers>
			<Layer level="BACKGROUND">
				<FontString name="$parentTitle" inherits="GameFontNormalLarge">
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="-22"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>

				<FontString name="$parentTitleIcon" parentKey="icon" inherits="MusicianFontIconsHighlightLarge" justifyh="LEFT">
					<Size x="32" y="32" />
					<Anchors>
						<Anchor point="RIGHT" relativePoint="LEFT" relativeTo="$parentTitle" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>

		<Frames>

			<Button name="$parentKeyboardConfigButton" inherits="MusicianIconButtonTemplate">
				<Size x="48" y="24" />
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent" relativePoint="TOPLEFT" y="-20" x="20"  />
				</Anchors>
				<Scripts>
					<OnLoad>
						self:SetText(Musician.Icons.Cog .. Musician.Icons.Blank .. Musician.Icons.Keyboard)
						self.tooltipText = Musician.Msg.CONFIGURE_KEYBOARD
					</OnLoad>
					<OnClick>
						MusicianKeyboard:Hide()
						MusicianKeyboardConfig:Show()
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentBandSyncButton" inherits="MusicianBandPlayButtonTemplate">
				<Anchors>
					<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentKeyboardConfigButton" />
				</Anchors>
				<Scripts>
					<OnClick inherit="append">
						Musician.Live.ToggleBandSyncMode()
					</OnClick>
					<OnLoad inherit="append">
						self.count:SetPoint("CENTER", self, "TOPRIGHT", -4, -4)
						self.tooltipText = Musician.Msg.LIVE_SYNC
					</OnLoad>
				</Scripts>
			</Button>

			<Button name="$parentToggleKeyboardButton" inherits="MusicianIconButtonTemplate">
				<Size x="48" y="24" />
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="$parent" relativePoint="TOPRIGHT" y="-20" x="-20"  />
				</Anchors>
				<Scripts>
					<OnLoad>
						self:SetText(Musician.Icons.Down ..  Musician.Icons.Blank .. Musician.Icons.PianoKeys)
						self.tooltipText = Musician.Msg.HIDE_KEYBOARD
					</OnLoad>
					<OnMouseDown>
						PlaySound(SOUNDKIT.U_CHAT_SCROLL_BUTTON)
					</OnMouseDown>
					<OnClick>
						MusicianKeyboard.showKeyboard()
					</OnClick>
				</Scripts>
			</Button>

			<Button name="$parentLiveModeButton" inherits="MusicianIconTextButtonTemplate">
				<Size x="105" y="24" />
				<Anchors>
					<Anchor point="RIGHT" relativeTo="$parentToggleKeyboardButton" relativePoint="LEFT" />
				</Anchors>
				<OnMouseDown inherit="prepend">
					PlaySound(SOUNDKIT.U_CHAT_SCROLL_BUTTON)
				</OnMouseDown>
			</Button>

			<Frame name="$parentProgramKeys">
				<Size x="750" y="24" />
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent" relativePoint="TOP" y="-50" />
				</Anchors>

				<Frames>
					<Button name="$parentWriteProgram" inherits="MusicianProgramKeyNoLEDTemplate">
						<Size x="48" y="24" />
						<Anchors>
							<Anchor point="TOPRIGHT" relativeTo="$parent" relativePoint="TOPRIGHT" />
						</Anchors>
						<Scripts>
							<OnLoad inherit="append">
								self:SetText(Musician.Icons.Save)
								local KEY = Musician.KEYBOARD_KEY
								local controlKey = IsMacClient() and KEY.ShiftLeft or KEY.ControlLeft -- Use Shift instead of Ctrl on MacOS
								self.tooltipText = string.gsub(Musician.Msg.WRITE_PROGRAM, "{key}", Musician.Msg.FIXED_KEY_NAMES[controlKey])
							</OnLoad>
						</Scripts>
						<NormalFont style="MusicianFontIconsNormal"/>
						<HighlightFont style="MusicianFontIconsHighlight"/>
						<DisabledFont style="MusicianFontIconsDisable"/>
					</Button>

					<Button name="$parentWriteProgramToggle" inherits="MusicianProgramKeyNoLEDTemplate">
						<Size x="48" y="24" />
						<Anchors>
							<Anchor point="CENTER" relativeTo="$parentWriteProgram" relativePoint="CENTER" />
						</Anchors>
						<Scripts>
							<OnLoad inherit="append">
								self.button = MusicianKeyboardProgramKeysWriteProgram
								self:SetText(self.button:GetText())
								self.button.hiddenButton = self
								self:SetFrameLevel(self.button:GetFrameLevel() + 1)
							</OnLoad>
							<OnEnter inherit="append">
								self.button:LockHighlight()
								ExecuteFrameScript(self.button, "OnEnter", motion)
							</OnEnter>
							<OnLeave inherit="append">
								self.button:UnlockHighlight()
								ExecuteFrameScript(self.button, "OnLeave", motion)
							</OnLeave>
							<OnMouseDown inherit="append">
								if self.button:GetButtonState() ~= "PUSHED" then
									self:SetAlpha(0)
									self.button:SetButtonState("PUSHED")
									ExecuteFrameScript(self.button, "OnMouseDown", button)
								else
									self:SetAlpha(1)
									self.button:SetButtonState("NORMAL")
									ExecuteFrameScript(self.button, "OnMouseUp", button)
								end
							</OnMouseDown>
						</Scripts>
						<NormalFont style="MusicianFontIconsNormal"/>
						<HighlightFont style="MusicianFontIconsHighlight"/>
						<DisabledFont style="MusicianFontIconsDisable"/>
					</Button>
				</Frames>

			</Frame>

			<Frame name="$parentKeys">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentProgramKeys" relativePoint="BOTTOM" y="-10" />
				</Anchors>
			</Frame>

			<Frame name="$parentControls">
				<Size x="750" y="92" />
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="$parent" relativePoint="BOTTOM" y="10"  />
				</Anchors>

				<Frames>

					<Frame name="$parentMain">
						<Size x="200" y="92" />
						<Anchors>
							<Anchor point="TOP" relativeTo="$parent" relativePoint="TOP" />
						</Anchors>

						<Scripts>
							<OnLoad>
								self.title:SetText(Musician.Msg.KEYBOARD_LAYOUT)
							</OnLoad>
						</Scripts>

						<Layers>
							<Layer level="OVERLAY">
								<FontString name="$parentTitle" parentKey="title" inherits="GameFontHighlight" justifyh="LEFT">
									<Size x="200" y="32" />
									<Anchors>
										<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent" />
									</Anchors>
								</FontString>
							</Layer>
						</Layers>

						<Frames>
							<Frame name="$parentLayoutDropdown" inherits="MusicianDropDownMenuTooltipTemplate">
								<Anchors>
									<Anchor point="TOPLEFT" x="-18" relativePoint="BOTTOMLEFT" relativeTo="$parentTitle" />
								</Anchors>
								<Scripts>
									<OnLoad inherit="prepend">
										MSA_DropDownMenu_SetWidth(self, 130)
									</OnLoad>
								</Scripts>
							</Frame>

							<Frame name="$parentBaseKeyDropdown" inherits="MusicianDropDownMenuTooltipTemplate">
								<Anchors>
									<Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentLayoutDropdown" x="-32" />
								</Anchors>
								<Scripts>
									<OnLoad inherit="prepend">
										MSA_DropDownMenu_SetWidth(self, 40)
									</OnLoad>
								</Scripts>
							</Frame>
						</Frames>
					</Frame>

					<Frame name="$parentLower" inherits="MusicianLayerTemplate" virtual="true">
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="TOPLEFT" relativeTo="$parent" />
						</Anchors>
						<Scripts>
							<OnLoad inherit="prepend">
								self.layerName:SetText(Musician.Msg.LAYERS[Musician.KEYBOARD_LAYER.LOWER])
							</OnLoad>
						</Scripts>
					</Frame>

					<Frame name="$parentUpper" inherits="MusicianLayerTemplate" virtual="true">
						<Anchors>
							<Anchor point="TOPRIGHT" relativePoint="TOPRIGHT" relativeTo="$parent" />
						</Anchors>
						<Scripts>
							<OnLoad inherit="prepend">
								self.layerName:SetText(Musician.Msg.LAYERS[Musician.KEYBOARD_LAYER.UPPER])
							</OnLoad>
						</Scripts>
					</Frame>

				</Frames>
			</Frame>

		</Frames>
	</Frame>
</Ui>

